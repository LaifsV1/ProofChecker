
** Conflict (shift/reduce) in state 527.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON WeKnow_PROOF h_pair Because_PROOF h_var DOT proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    (?)

** In state 527, looking ahead at Therefore_PROOF, reducing production
** proof -> WeKnow_PROOF h_pair Because_PROOF h_var DOT proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
WeKnow_PROOF h_pair Because_PROOF h_var DOT proof . 

** In state 527, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

WeKnow_PROOF h_pair Because_PROOF h_var DOT proof 
                                            proof . Therefore_PROOF prop 

** Conflict (shift/reduce) in state 521.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON WeKnow_PROOF h_var With_PROOF VAR Because_PROOF h_var DOT proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    (?)

** In state 521, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

WeKnow_PROOF h_var With_PROOF VAR Because_PROOF h_var DOT proof 
                                                          proof . Therefore_PROOF prop 

** In state 521, looking ahead at Therefore_PROOF, reducing production
** proof -> WeKnow_PROOF h_var With_PROOF VAR Because_PROOF h_var DOT proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
WeKnow_PROOF h_var With_PROOF VAR Because_PROOF h_var DOT proof . 

** Conflict (shift/reduce) in state 513.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON WeKnow_PROOF HVAR COLON prop Because_PROOF proof DOT proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    (?)

** In state 513, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

WeKnow_PROOF HVAR COLON prop Because_PROOF proof DOT proof 
                                                     proof . Therefore_PROOF prop 

** In state 513, looking ahead at Therefore_PROOF, reducing production
** proof -> WeKnow_PROOF HVAR COLON prop Because_PROOF proof DOT proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
WeKnow_PROOF HVAR COLON prop Because_PROOF proof DOT proof . 

** Conflict (shift/reduce) in state 512.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON WeGet_PROOF HVAR COLON prop Instan_PROOF h_var With_PROOF OPEN_PAREN propvar_tuple DOT proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    (?)

** In state 512, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

WeGet_PROOF HVAR COLON prop Instan_PROOF h_var With_PROOF OPEN_PAREN propvar_tuple DOT proof 
                                                                                       proof . Therefore_PROOF prop 

** In state 512, looking ahead at Therefore_PROOF, reducing production
** proof -> WeGet_PROOF HVAR COLON prop Instan_PROOF h_var With_PROOF OPEN_PAREN propvar_tuple DOT proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
WeGet_PROOF HVAR COLON prop Instan_PROOF h_var With_PROOF OPEN_PAREN propvar_tuple DOT proof . 

** Conflict (shift/reduce) in state 511.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON Since_PROOF h_var Then_PROOF COLON Case_PROOF Left_PROOF COLON h_var DOT proof Case_PROOF Right_PROOF COLON h_var DOT proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    (?)

** In state 511, looking ahead at Therefore_PROOF, reducing production
** proof -> Since_PROOF h_var Then_PROOF COLON Case_PROOF Left_PROOF COLON h_var DOT proof Case_PROOF Right_PROOF COLON h_var DOT proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
Since_PROOF h_var Then_PROOF COLON Case_PROOF Left_PROOF COLON h_var DOT proof Case_PROOF Right_PROOF COLON h_var DOT proof . 

** In state 511, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

Since_PROOF h_var Then_PROOF COLON Case_PROOF Left_PROOF COLON h_var DOT proof Case_PROOF Right_PROOF COLON h_var DOT proof 
                                                                                                                      proof . Therefore_PROOF prop 

** Conflict (shift/reduce) in state 506.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF COMMA CLOSE_PAREN
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON OPEN_PAREN proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    (?)

** In state 506, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

OPEN_PAREN proof COMMA proof CLOSE_PAREN 
           proof . Therefore_PROOF prop 

** In state 506, looking ahead at Therefore_PROOF, reducing production
** spf_errors -> OPEN_PAREN proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
simple_proof // lookahead token is inherited
spf_errors // lookahead token is inherited
OPEN_PAREN proof . 

** Conflict (shift/reduce) in state 505.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON Choose_PROOF term DOT proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    (?)

** In state 505, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

Choose_PROOF term DOT proof 
                      proof . Therefore_PROOF prop 

** In state 505, looking ahead at Therefore_PROOF, reducing production
** proof -> Choose_PROOF term DOT proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
Choose_PROOF term DOT proof . 

** Conflict (shift/reduce) in state 503.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON By_PROOF Induction_PROOF Bool_TYPE COLON Case_PROOF True_TERM COLON proof Case_PROOF False_TERM COLON proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    (?)

** In state 503, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

By_PROOF Induction_PROOF Bool_TYPE COLON Case_PROOF True_TERM COLON proof Case_PROOF False_TERM COLON proof 
                                                                                                      proof . Therefore_PROOF prop 

** In state 503, looking ahead at Therefore_PROOF, reducing production
** proof -> By_PROOF Induction_PROOF Bool_TYPE COLON Case_PROOF True_TERM COLON proof Case_PROOF False_TERM COLON proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
By_PROOF Induction_PROOF Bool_TYPE COLON Case_PROOF True_TERM COLON proof Case_PROOF False_TERM COLON proof . 

** Conflict (shift/reduce) in state 492.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON By_PROOF Induction_PROOF List_TYPE_OP COLON Case_PROOF Nil_TERM COLON proof Case_PROOF OPEN_PAREN VAR Cons_TERM_OP VAR CLOSE_PAREN COLON h_var DOT proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    (?)

** In state 492, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

By_PROOF Induction_PROOF List_TYPE_OP COLON Case_PROOF Nil_TERM COLON proof Case_PROOF OPEN_PAREN VAR Cons_TERM_OP VAR CLOSE_PAREN COLON h_var DOT proof 
                                                                                                                                                   proof . Therefore_PROOF prop 

** In state 492, looking ahead at Therefore_PROOF, reducing production
** proof -> By_PROOF Induction_PROOF List_TYPE_OP COLON Case_PROOF Nil_TERM COLON proof Case_PROOF OPEN_PAREN VAR Cons_TERM_OP VAR CLOSE_PAREN COLON h_var DOT proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
By_PROOF Induction_PROOF List_TYPE_OP COLON Case_PROOF Nil_TERM COLON proof Case_PROOF OPEN_PAREN VAR Cons_TERM_OP VAR CLOSE_PAREN COLON h_var DOT proof . 

** Conflict (shift/reduce) in state 475.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON By_PROOF Induction_PROOF Nat_TYPE COLON Case_PROOF Zero_TERM COLON proof Case_PROOF OPEN_PAREN Suc_TERM_OP VAR CLOSE_PAREN COLON h_var DOT proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    (?)

** In state 475, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

By_PROOF Induction_PROOF Nat_TYPE COLON Case_PROOF Zero_TERM COLON proof Case_PROOF OPEN_PAREN Suc_TERM_OP VAR CLOSE_PAREN COLON h_var DOT proof 
                                                                                                                                           proof . Therefore_PROOF prop 

** In state 475, looking ahead at Therefore_PROOF, reducing production
** proof -> By_PROOF Induction_PROOF Nat_TYPE COLON Case_PROOF Zero_TERM COLON proof Case_PROOF OPEN_PAREN Suc_TERM_OP VAR CLOSE_PAREN COLON h_var DOT proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
By_PROOF Induction_PROOF Nat_TYPE COLON Case_PROOF Zero_TERM COLON proof Case_PROOF OPEN_PAREN Suc_TERM_OP VAR CLOSE_PAREN COLON h_var DOT proof . 

** Conflict (shift/reduce) in state 467.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON By_PROOF Induction_PROOF Nat_TYPE COLON Case_PROOF Zero_TERM COLON proof Case_PROOF Suc_TERM_OP VAR COLON h_var DOT proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    (?)

** In state 467, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

By_PROOF Induction_PROOF Nat_TYPE COLON Case_PROOF Zero_TERM COLON proof Case_PROOF Suc_TERM_OP VAR COLON h_var DOT proof 
                                                                                                                    proof . Therefore_PROOF prop 

** In state 467, looking ahead at Therefore_PROOF, reducing production
** proof -> By_PROOF Induction_PROOF Nat_TYPE COLON Case_PROOF Zero_TERM COLON proof Case_PROOF Suc_TERM_OP VAR COLON h_var DOT proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
By_PROOF Induction_PROOF Nat_TYPE COLON Case_PROOF Zero_TERM COLON proof Case_PROOF Suc_TERM_OP VAR COLON h_var DOT proof . 

** Conflict (shift/reduce) in state 466.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON Assume_PROOF h_var DOT proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    (?)

** In state 466, looking ahead at Therefore_PROOF, reducing production
** proof -> Assume_PROOF h_var DOT proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
Assume_PROOF h_var DOT proof . 

** In state 466, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

Assume_PROOF h_var DOT proof 
                       proof . Therefore_PROOF prop 

** Conflict (shift/reduce) in state 457.
** Token involved: error
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON h_var 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
(?)

** In state 457, looking ahead at error, reducing production
** spf_errors -> h_var 
** is permitted because of the following sub-derivation:

syntax_toplevel_errors 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof error // lookahead token appears
                                                    simple_proof // lookahead token is inherited
                                                    spf_errors // lookahead token is inherited
                                                    h_var . 

** In state 457, looking ahead at error, shifting is permitted
** because of the following sub-derivation:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    simple_proof 
                                                    spf_errors 
                                                    h_var . error 

** Conflict (shift/reduce) in state 452.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON Assume_PROOF VAR COLON complex_type DOT proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    (?)

** In state 452, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

Assume_PROOF VAR COLON complex_type DOT proof 
                                        proof . Therefore_PROOF prop 

** In state 452, looking ahead at Therefore_PROOF, reducing production
** proof -> Assume_PROOF VAR COLON complex_type DOT proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
Assume_PROOF VAR COLON complex_type DOT proof . 

** Conflict (shift/reduce) in state 422.
** Token involved: error
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON Choose_PROOF 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
(?)

** In state 422, looking ahead at error, reducing production
** proof_errors -> Choose_PROOF 
** is permitted because of the following sub-derivation:

syntax_toplevel_errors 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof error // lookahead token appears
                                                    proof_errors // lookahead token is inherited
                                                    Choose_PROOF . 

** In state 422, looking ahead at error, shifting is permitted
** because of the following sub-derivation:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    Choose_PROOF term DOT proof 
                                                                 term_errors 
                                                                 . error 

** Conflict (shift/reduce) in state 384.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON OPEN_PAREN proof COMMA WeKnow_PROOF h_pair Because_PROOF h_var DOT proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    OPEN_PAREN proof COMMA proof CLOSE_PAREN 
                                                                           (?)

** In state 384, looking ahead at Therefore_PROOF, reducing production
** proof -> WeKnow_PROOF h_pair Because_PROOF h_var DOT proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
WeKnow_PROOF h_pair Because_PROOF h_var DOT proof . 

** In state 384, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

WeKnow_PROOF h_pair Because_PROOF h_var DOT proof 
                                            proof . Therefore_PROOF prop 

** Conflict (shift/reduce) in state 376.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON OPEN_PAREN proof COMMA WeKnow_PROOF h_var With_PROOF VAR Because_PROOF h_var DOT proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    OPEN_PAREN proof COMMA proof CLOSE_PAREN 
                                                                           (?)

** In state 376, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

WeKnow_PROOF h_var With_PROOF VAR Because_PROOF h_var DOT proof 
                                                          proof . Therefore_PROOF prop 

** In state 376, looking ahead at Therefore_PROOF, reducing production
** proof -> WeKnow_PROOF h_var With_PROOF VAR Because_PROOF h_var DOT proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
WeKnow_PROOF h_var With_PROOF VAR Because_PROOF h_var DOT proof . 

** Conflict (shift/reduce) in state 368.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON OPEN_PAREN proof COMMA WeKnow_PROOF HVAR COLON prop Because_PROOF proof DOT proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    OPEN_PAREN proof COMMA proof CLOSE_PAREN 
                                                                           (?)

** In state 368, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

WeKnow_PROOF HVAR COLON prop Because_PROOF proof DOT proof 
                                                     proof . Therefore_PROOF prop 

** In state 368, looking ahead at Therefore_PROOF, reducing production
** proof -> WeKnow_PROOF HVAR COLON prop Because_PROOF proof DOT proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
WeKnow_PROOF HVAR COLON prop Because_PROOF proof DOT proof . 

** Conflict (shift/reduce) in state 365.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON OPEN_PAREN proof COMMA WeGet_PROOF HVAR COLON prop Instan_PROOF h_var With_PROOF OPEN_PAREN propvar_tuple DOT proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    OPEN_PAREN proof COMMA proof CLOSE_PAREN 
                                                                           (?)

** In state 365, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

WeGet_PROOF HVAR COLON prop Instan_PROOF h_var With_PROOF OPEN_PAREN propvar_tuple DOT proof 
                                                                                       proof . Therefore_PROOF prop 

** In state 365, looking ahead at Therefore_PROOF, reducing production
** proof -> WeGet_PROOF HVAR COLON prop Instan_PROOF h_var With_PROOF OPEN_PAREN propvar_tuple DOT proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
WeGet_PROOF HVAR COLON prop Instan_PROOF h_var With_PROOF OPEN_PAREN propvar_tuple DOT proof . 

** Conflict (shift/reduce) in state 364.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON OPEN_PAREN proof COMMA Since_PROOF h_var Then_PROOF COLON Case_PROOF Left_PROOF COLON h_var DOT proof Case_PROOF Right_PROOF COLON h_var DOT proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    OPEN_PAREN proof COMMA proof CLOSE_PAREN 
                                                                           (?)

** In state 364, looking ahead at Therefore_PROOF, reducing production
** proof -> Since_PROOF h_var Then_PROOF COLON Case_PROOF Left_PROOF COLON h_var DOT proof Case_PROOF Right_PROOF COLON h_var DOT proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
Since_PROOF h_var Then_PROOF COLON Case_PROOF Left_PROOF COLON h_var DOT proof Case_PROOF Right_PROOF COLON h_var DOT proof . 

** In state 364, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

Since_PROOF h_var Then_PROOF COLON Case_PROOF Left_PROOF COLON h_var DOT proof Case_PROOF Right_PROOF COLON h_var DOT proof 
                                                                                                                      proof . Therefore_PROOF prop 

** Conflict (shift/reduce) in state 353.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF COMMA CLOSE_PAREN
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON OPEN_PAREN proof COMMA OPEN_PAREN proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    OPEN_PAREN proof COMMA proof CLOSE_PAREN 
                                                                           (?)

** In state 353, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

OPEN_PAREN proof COMMA proof CLOSE_PAREN 
           proof . Therefore_PROOF prop 

** In state 353, looking ahead at Therefore_PROOF, reducing production
** spf_errors -> OPEN_PAREN proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
simple_proof // lookahead token is inherited
spf_errors // lookahead token is inherited
OPEN_PAREN proof . 

** Conflict (shift/reduce) in state 352.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON OPEN_PAREN proof COMMA Choose_PROOF term DOT proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    OPEN_PAREN proof COMMA proof CLOSE_PAREN 
                                                                           (?)

** In state 352, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

Choose_PROOF term DOT proof 
                      proof . Therefore_PROOF prop 

** In state 352, looking ahead at Therefore_PROOF, reducing production
** proof -> Choose_PROOF term DOT proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
Choose_PROOF term DOT proof . 

** Conflict (shift/reduce) in state 350.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON OPEN_PAREN proof COMMA By_PROOF Induction_PROOF Bool_TYPE COLON Case_PROOF True_TERM COLON proof Case_PROOF False_TERM COLON proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    OPEN_PAREN proof COMMA proof CLOSE_PAREN 
                                                                           (?)

** In state 350, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

By_PROOF Induction_PROOF Bool_TYPE COLON Case_PROOF True_TERM COLON proof Case_PROOF False_TERM COLON proof 
                                                                                                      proof . Therefore_PROOF prop 

** In state 350, looking ahead at Therefore_PROOF, reducing production
** proof -> By_PROOF Induction_PROOF Bool_TYPE COLON Case_PROOF True_TERM COLON proof Case_PROOF False_TERM COLON proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
By_PROOF Induction_PROOF Bool_TYPE COLON Case_PROOF True_TERM COLON proof Case_PROOF False_TERM COLON proof . 

** Conflict (shift/reduce) in state 339.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON OPEN_PAREN proof COMMA By_PROOF Induction_PROOF List_TYPE_OP COLON Case_PROOF Nil_TERM COLON proof Case_PROOF OPEN_PAREN VAR Cons_TERM_OP VAR CLOSE_PAREN COLON h_var DOT proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    OPEN_PAREN proof COMMA proof CLOSE_PAREN 
                                                                           (?)

** In state 339, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

By_PROOF Induction_PROOF List_TYPE_OP COLON Case_PROOF Nil_TERM COLON proof Case_PROOF OPEN_PAREN VAR Cons_TERM_OP VAR CLOSE_PAREN COLON h_var DOT proof 
                                                                                                                                                   proof . Therefore_PROOF prop 

** In state 339, looking ahead at Therefore_PROOF, reducing production
** proof -> By_PROOF Induction_PROOF List_TYPE_OP COLON Case_PROOF Nil_TERM COLON proof Case_PROOF OPEN_PAREN VAR Cons_TERM_OP VAR CLOSE_PAREN COLON h_var DOT proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
By_PROOF Induction_PROOF List_TYPE_OP COLON Case_PROOF Nil_TERM COLON proof Case_PROOF OPEN_PAREN VAR Cons_TERM_OP VAR CLOSE_PAREN COLON h_var DOT proof . 

** Conflict (shift/reduce) in state 322.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON OPEN_PAREN proof COMMA By_PROOF Induction_PROOF Nat_TYPE COLON Case_PROOF Zero_TERM COLON proof Case_PROOF OPEN_PAREN Suc_TERM_OP VAR CLOSE_PAREN COLON h_var DOT proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    OPEN_PAREN proof COMMA proof CLOSE_PAREN 
                                                                           (?)

** In state 322, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

By_PROOF Induction_PROOF Nat_TYPE COLON Case_PROOF Zero_TERM COLON proof Case_PROOF OPEN_PAREN Suc_TERM_OP VAR CLOSE_PAREN COLON h_var DOT proof 
                                                                                                                                           proof . Therefore_PROOF prop 

** In state 322, looking ahead at Therefore_PROOF, reducing production
** proof -> By_PROOF Induction_PROOF Nat_TYPE COLON Case_PROOF Zero_TERM COLON proof Case_PROOF OPEN_PAREN Suc_TERM_OP VAR CLOSE_PAREN COLON h_var DOT proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
By_PROOF Induction_PROOF Nat_TYPE COLON Case_PROOF Zero_TERM COLON proof Case_PROOF OPEN_PAREN Suc_TERM_OP VAR CLOSE_PAREN COLON h_var DOT proof . 

** Conflict (shift/reduce) in state 314.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON OPEN_PAREN proof COMMA By_PROOF Induction_PROOF Nat_TYPE COLON Case_PROOF Zero_TERM COLON proof Case_PROOF Suc_TERM_OP VAR COLON h_var DOT proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    OPEN_PAREN proof COMMA proof CLOSE_PAREN 
                                                                           (?)

** In state 314, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

By_PROOF Induction_PROOF Nat_TYPE COLON Case_PROOF Zero_TERM COLON proof Case_PROOF Suc_TERM_OP VAR COLON h_var DOT proof 
                                                                                                                    proof . Therefore_PROOF prop 

** In state 314, looking ahead at Therefore_PROOF, reducing production
** proof -> By_PROOF Induction_PROOF Nat_TYPE COLON Case_PROOF Zero_TERM COLON proof Case_PROOF Suc_TERM_OP VAR COLON h_var DOT proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
By_PROOF Induction_PROOF Nat_TYPE COLON Case_PROOF Zero_TERM COLON proof Case_PROOF Suc_TERM_OP VAR COLON h_var DOT proof . 

** Conflict (shift/reduce) in state 306.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON OPEN_PAREN proof COMMA Assume_PROOF h_var DOT proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    OPEN_PAREN proof COMMA proof CLOSE_PAREN 
                                                                           (?)

** In state 306, looking ahead at Therefore_PROOF, reducing production
** proof -> Assume_PROOF h_var DOT proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
Assume_PROOF h_var DOT proof . 

** In state 306, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

Assume_PROOF h_var DOT proof 
                       proof . Therefore_PROOF prop 

** Conflict (shift/reduce) in state 285.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON OPEN_PAREN proof COMMA Assume_PROOF VAR COLON complex_type DOT proof 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    OPEN_PAREN proof COMMA proof CLOSE_PAREN 
                                                                           (?)

** In state 285, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

Assume_PROOF VAR COLON complex_type DOT proof 
                                        proof . Therefore_PROOF prop 

** In state 285, looking ahead at Therefore_PROOF, reducing production
** proof -> Assume_PROOF VAR COLON complex_type DOT proof 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
Assume_PROOF VAR COLON complex_type DOT proof . 

** Conflict (shift/reduce) in state 253.
** Token involved: CLOSE_PAREN
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON OPEN_PAREN HVAR COLON prop 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    simple_proof 
                                                    (?)

** In state 253, looking ahead at CLOSE_PAREN, reducing production
** h_var -> HVAR COLON prop 
** is permitted because of the following sub-derivation:

OPEN_PAREN proof CLOSE_PAREN // lookahead token appears
           simple_proof // lookahead token is inherited
           spf_errors // lookahead token is inherited
           h_var // lookahead token is inherited
           HVAR COLON prop . 

** In state 253, looking ahead at CLOSE_PAREN, shifting is permitted
** because of the following sub-derivation:

h_var With_PROOF OPEN_PAREN spine CLOSE_PAREN 
OPEN_PAREN HVAR COLON prop . CLOSE_PAREN 

** Conflict (shift/reduce) in state 237.
** Tokens involved: Or_PROP_OP Implies_PROP_OP CLOSE_PAREN And_PROP_OP
** The following explanations concentrate on token Or_PROP_OP.
** This state is reached from file_toplevel after reading:

DEFINITIONS COLON HVAR COLON OPEN_PAREN prop 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
DEFINITIONS COLON definitions 
                  HVAR COLON prop SEMICOLON definitions 
                             (?)

** In state 237, looking ahead at Or_PROP_OP, shifting is permitted
** because of the following sub-derivation:

simple_prop 
OPEN_PAREN prop CLOSE_PAREN 
           prop . Or_PROP_OP prop 

** In state 237, looking ahead at Or_PROP_OP, reducing production
** simple_prop -> OPEN_PAREN prop 
** is permitted because of the following sub-derivation:

prop Or_PROP_OP prop // lookahead token appears
simple_prop // lookahead token is inherited
OPEN_PAREN prop . 

** Conflict (shift/reduce) in state 236.
** Tokens involved: Zero_TERM VAR True_TERM OPEN_PAREN Nil_TERM False_TERM Eq_OP Cons_TERM_OP CLOSE_PAREN
** The following explanations concentrate on token Zero_TERM.
** This state is reached from file_toplevel after reading:

DEFINITIONS COLON HVAR COLON OPEN_PAREN term 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
DEFINITIONS COLON definitions 
                  HVAR COLON prop SEMICOLON definitions 
                             (?)

** In state 236, looking ahead at Zero_TERM, shifting is permitted
** because of the following sub-derivation:

simple_prop 
OPEN_PAREN prop CLOSE_PAREN 
           term Eq_OP term COLON complex_type 
           term simple_term 
                . Zero_TERM 

** In state 236, looking ahead at Zero_TERM, reducing production
** term_errors -> OPEN_PAREN term 
** is permitted because of the following sub-derivation:

term Eq_OP term COLON complex_type 
term simple_term // lookahead token appears because simple_term can begin with Zero_TERM
term_errors // lookahead token is inherited
OPEN_PAREN term . 

** Conflict (shift/reduce) in state 234.
** Tokens involved: Or_PROP_OP Implies_PROP_OP And_PROP_OP
** The following explanations concentrate on token Or_PROP_OP.
** This state is reached from file_toplevel after reading:

DEFINITIONS COLON HVAR COLON Forall_PROP VAR COLON complex_type DOT prop 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
DEFINITIONS COLON definitions 
                  HVAR COLON prop SEMICOLON definitions 
                             (?)

** In state 234, looking ahead at Or_PROP_OP, shifting is permitted
** because of the following sub-derivation:

Forall_PROP VAR COLON complex_type DOT prop 
                                       prop . Or_PROP_OP prop 

** In state 234, looking ahead at Or_PROP_OP, reducing production
** prop -> Forall_PROP VAR COLON complex_type DOT prop 
** is permitted because of the following sub-derivation:

prop Or_PROP_OP prop // lookahead token appears
Forall_PROP VAR COLON complex_type DOT prop . 

** Conflict (shift/reduce) in state 232.
** Token involved: error
** This state is reached from file_toplevel after reading:

DEFINITIONS COLON HVAR COLON prop Implies_PROP_OP 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
(?)

** In state 232, looking ahead at error, reducing production
** prop_errors -> prop Implies_PROP_OP 
** is permitted because of the following sub-derivation:

syntax_toplevel file_toplevel // lookahead token appears because file_toplevel can begin with error
DEFINITIONS COLON definitions // lookahead token is inherited
                  HVAR COLON prop // lookahead token is inherited
                             prop_errors // lookahead token is inherited
                             prop Implies_PROP_OP . 

** In state 232, looking ahead at error, shifting is permitted
** because of the following sub-derivation:

syntax_toplevel file_toplevel 
DEFINITIONS COLON definitions 
                  HVAR COLON prop SEMICOLON definitions 
                             prop Implies_PROP_OP prop 
                                                  prop_errors 
                                                  . error 

** Conflict (shift/reduce) in state 230.
** Token involved: error
** This state is reached from file_toplevel after reading:

DEFINITIONS COLON HVAR COLON prop And_PROP_OP 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
(?)

** In state 230, looking ahead at error, reducing production
** prop_errors -> prop And_PROP_OP 
** is permitted because of the following sub-derivation:

syntax_toplevel file_toplevel // lookahead token appears because file_toplevel can begin with error
DEFINITIONS COLON definitions // lookahead token is inherited
                  HVAR COLON prop // lookahead token is inherited
                             prop_errors // lookahead token is inherited
                             prop And_PROP_OP . 

** In state 230, looking ahead at error, shifting is permitted
** because of the following sub-derivation:

syntax_toplevel file_toplevel 
DEFINITIONS COLON definitions 
                  HVAR COLON prop SEMICOLON definitions 
                             prop And_PROP_OP prop 
                                              prop_errors 
                                              . error 

** Conflict (shift/reduce) in state 228.
** Token involved: error
** This state is reached from file_toplevel after reading:

DEFINITIONS COLON HVAR COLON prop Or_PROP_OP 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
(?)

** In state 228, looking ahead at error, reducing production
** prop_errors -> prop Or_PROP_OP 
** is permitted because of the following sub-derivation:

syntax_toplevel file_toplevel // lookahead token appears because file_toplevel can begin with error
DEFINITIONS COLON definitions // lookahead token is inherited
                  HVAR COLON prop // lookahead token is inherited
                             prop_errors // lookahead token is inherited
                             prop Or_PROP_OP . 

** In state 228, looking ahead at error, shifting is permitted
** because of the following sub-derivation:

syntax_toplevel file_toplevel 
DEFINITIONS COLON definitions 
                  HVAR COLON prop SEMICOLON definitions 
                             prop Or_PROP_OP prop 
                                             prop_errors 
                                             . error 

** Conflict (shift/reduce) in state 227.
** Tokens involved: Or_PROP_OP Implies_PROP_OP And_PROP_OP
** The following explanations concentrate on token Or_PROP_OP.
** This state is reached from file_toplevel after reading:

DEFINITIONS COLON HVAR COLON Exists_PROP VAR COLON complex_type DOT prop 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
DEFINITIONS COLON definitions 
                  HVAR COLON prop SEMICOLON definitions 
                             (?)

** In state 227, looking ahead at Or_PROP_OP, shifting is permitted
** because of the following sub-derivation:

Exists_PROP VAR COLON complex_type DOT prop 
                                       prop . Or_PROP_OP prop 

** In state 227, looking ahead at Or_PROP_OP, reducing production
** prop -> Exists_PROP VAR COLON complex_type DOT prop 
** is permitted because of the following sub-derivation:

prop Or_PROP_OP prop // lookahead token appears
Exists_PROP VAR COLON complex_type DOT prop . 

** Conflict (shift/reduce) in state 222.
** Tokens involved: List_TYPE_OP CLOSE_PAREN Arrow_TYPE_OP
** The following explanations concentrate on token List_TYPE_OP.
** This state is reached from file_toplevel after reading:

SIGNATURES COLON VAR COLON OPEN_PAREN complex_type 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
SIGNATURES COLON signatures 
                 VAR COLON complex_type SEMICOLON signatures 
                           (?)

** In state 222, looking ahead at List_TYPE_OP, shifting is permitted
** because of the following sub-derivation:

simple_type 
OPEN_PAREN complex_type CLOSE_PAREN 
           complex_type . List_TYPE_OP 

** In state 222, looking ahead at List_TYPE_OP, reducing production
** type_errors -> OPEN_PAREN complex_type 
** is permitted because of the following sub-derivation:

complex_type List_TYPE_OP // lookahead token appears
type_errors // lookahead token is inherited
OPEN_PAREN complex_type . 

** Conflict (shift/reduce) in state 221.
** Token involved: List_TYPE_OP
** This state is reached from file_toplevel after reading:

SIGNATURES COLON VAR COLON complex_type Arrow_TYPE_OP complex_type 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
SIGNATURES COLON signatures 
                 VAR COLON complex_type SEMICOLON signatures 
                           (?)

** In state 221, looking ahead at List_TYPE_OP, reducing production
** complex_type -> complex_type Arrow_TYPE_OP complex_type 
** is permitted because of the following sub-derivation:

complex_type List_TYPE_OP // lookahead token appears
complex_type Arrow_TYPE_OP complex_type . 

** In state 221, looking ahead at List_TYPE_OP, shifting is permitted
** because of the following sub-derivation:

complex_type Arrow_TYPE_OP complex_type 
                           complex_type . List_TYPE_OP 

** Conflict (shift/reduce) in state 220.
** Tokens involved: error List_TYPE_OP
** The following explanations concentrate on token error.
** This state is reached from file_toplevel after reading:

SIGNATURES COLON VAR COLON complex_type Arrow_TYPE_OP 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
(?)

** In state 220, looking ahead at error, reducing production
** type_errors -> complex_type Arrow_TYPE_OP 
** is permitted because of the following sub-derivation:

syntax_toplevel file_toplevel // lookahead token appears because file_toplevel can begin with error
SIGNATURES COLON signatures // lookahead token is inherited
                 VAR COLON complex_type // lookahead token is inherited
                           type_errors // lookahead token is inherited
                           complex_type Arrow_TYPE_OP . 

** In state 220, looking ahead at error, shifting is permitted
** because of the following sub-derivation:

syntax_toplevel file_toplevel 
SIGNATURES COLON signatures 
                 VAR COLON complex_type SEMICOLON signatures 
                           complex_type Arrow_TYPE_OP complex_type 
                                                      type_errors 
                                                      . error 

** Conflict (shift/reduce) in state 218.
** Token involved: List_TYPE_OP
** This state is reached from file_toplevel after reading:

SIGNATURES COLON VAR COLON Arrow_TYPE_OP complex_type 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
SIGNATURES COLON signatures 
                 VAR COLON complex_type SEMICOLON signatures 
                           (?)

** In state 218, looking ahead at List_TYPE_OP, shifting is permitted
** because of the following sub-derivation:

type_errors 
Arrow_TYPE_OP complex_type 
              complex_type . List_TYPE_OP 

** In state 218, looking ahead at List_TYPE_OP, reducing production
** type_errors -> Arrow_TYPE_OP complex_type 
** is permitted because of the following sub-derivation:

complex_type List_TYPE_OP // lookahead token appears
type_errors // lookahead token is inherited
Arrow_TYPE_OP complex_type . 

** Conflict (shift/reduce) in state 201.
** Tokens involved: Zero_TERM VAR True_TERM OPEN_PAREN Nil_TERM False_TERM Cons_TERM_OP
** The following explanations concentrate on token Zero_TERM.
** This state is reached from file_toplevel after reading:

DEFINITIONS COLON HVAR COLON term Eq_OP Suc_TERM_OP term 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
DEFINITIONS COLON definitions 
                  HVAR COLON prop SEMICOLON definitions 
                             term Eq_OP term COLON complex_type 
                                        (?)

** In state 201, looking ahead at Zero_TERM, shifting is permitted
** because of the following sub-derivation:

Suc_TERM_OP term 
            term simple_term 
                 . Zero_TERM 

** In state 201, looking ahead at Zero_TERM, reducing production
** term -> Suc_TERM_OP term 
** is permitted because of the following sub-derivation:

term simple_term // lookahead token appears because simple_term can begin with Zero_TERM
Suc_TERM_OP term . 

** Conflict (shift/reduce) in state 200.
** Tokens involved: Zero_TERM VAR True_TERM OPEN_PAREN Nil_TERM False_TERM Cons_TERM_OP CLOSE_PAREN
** The following explanations concentrate on token Zero_TERM.
** This state is reached from file_toplevel after reading:

DEFINITIONS COLON HVAR COLON term Eq_OP OPEN_PAREN term 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
DEFINITIONS COLON definitions 
                  HVAR COLON prop SEMICOLON definitions 
                             term Eq_OP term COLON complex_type 
                                        (?)

** In state 200, looking ahead at Zero_TERM, shifting is permitted
** because of the following sub-derivation:

simple_term 
OPEN_PAREN term CLOSE_PAREN 
           term simple_term 
                . Zero_TERM 

** In state 200, looking ahead at Zero_TERM, reducing production
** term_errors -> OPEN_PAREN term 
** is permitted because of the following sub-derivation:

term simple_term // lookahead token appears because simple_term can begin with Zero_TERM
term_errors // lookahead token is inherited
OPEN_PAREN term . 

** Conflict (shift/reduce) in state 197.
** Tokens involved: Zero_TERM VAR True_TERM OPEN_PAREN Nil_TERM False_TERM
** The following explanations concentrate on token Zero_TERM.
** This state is reached from file_toplevel after reading:

DEFINITIONS COLON HVAR COLON term Eq_OP term Cons_TERM_OP term 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
DEFINITIONS COLON definitions 
                  HVAR COLON prop SEMICOLON definitions 
                             term Eq_OP term COLON complex_type 
                                        (?)

** In state 197, looking ahead at Zero_TERM, shifting is permitted
** because of the following sub-derivation:

term Cons_TERM_OP term 
                  term simple_term 
                       . Zero_TERM 

** In state 197, looking ahead at Zero_TERM, reducing production
** term -> term Cons_TERM_OP term 
** is permitted because of the following sub-derivation:

term simple_term // lookahead token appears because simple_term can begin with Zero_TERM
term Cons_TERM_OP term . 

** Conflict (shift/reduce) in state 196.
** Tokens involved: error Zero_TERM VAR True_TERM OPEN_PAREN Nil_TERM False_TERM
** The following explanations concentrate on token error.
** This state is reached from file_toplevel after reading:

DEFINITIONS COLON HVAR COLON term Eq_OP term Cons_TERM_OP 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
(?)

** In state 196, looking ahead at error, reducing production
** term_errors -> term Cons_TERM_OP 
** is permitted because of the following sub-derivation:

syntax_toplevel file_toplevel // lookahead token appears because file_toplevel can begin with error
DEFINITIONS COLON definitions // lookahead token is inherited
                  HVAR COLON prop // lookahead token is inherited
                             prop_errors // lookahead token is inherited
                             term Eq_OP term // lookahead token is inherited
                                        term_errors // lookahead token is inherited
                                        term Cons_TERM_OP . 

** In state 196, looking ahead at error, shifting is permitted
** because of the following sub-derivation:

syntax_toplevel file_toplevel 
DEFINITIONS COLON definitions 
                  HVAR COLON prop SEMICOLON definitions 
                             term Eq_OP term COLON complex_type 
                                        term Cons_TERM_OP term 
                                                          term_errors 
                                                          . error 

** Conflict (shift/reduce) in state 192.
** Tokens involved: Zero_TERM VAR True_TERM OPEN_PAREN Nil_TERM False_TERM
** The following explanations concentrate on token Zero_TERM.
** This state is reached from file_toplevel after reading:

DEFINITIONS COLON HVAR COLON term Eq_OP Cons_TERM_OP term 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
DEFINITIONS COLON definitions 
                  HVAR COLON prop SEMICOLON definitions 
                             term Eq_OP term COLON complex_type 
                                        (?)

** In state 192, looking ahead at Zero_TERM, shifting is permitted
** because of the following sub-derivation:

term_errors 
Cons_TERM_OP term 
             term simple_term 
                  . Zero_TERM 

** In state 192, looking ahead at Zero_TERM, reducing production
** term_errors -> Cons_TERM_OP term 
** is permitted because of the following sub-derivation:

term simple_term // lookahead token appears because simple_term can begin with Zero_TERM
term_errors // lookahead token is inherited
Cons_TERM_OP term . 

** Conflict (shift/reduce) in state 186.
** Tokens involved: error Zero_TERM VAR True_TERM OPEN_PAREN Nil_TERM False_TERM Cons_TERM_OP
** The following explanations concentrate on token error.
** This state is reached from file_toplevel after reading:

DEFINITIONS COLON HVAR COLON term Eq_OP Suc_TERM_OP 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
(?)

** In state 186, looking ahead at error, reducing production
** term_errors -> Suc_TERM_OP 
** is permitted because of the following sub-derivation:

syntax_toplevel file_toplevel // lookahead token appears because file_toplevel can begin with error
DEFINITIONS COLON definitions // lookahead token is inherited
                  HVAR COLON prop // lookahead token is inherited
                             prop_errors // lookahead token is inherited
                             term Eq_OP term // lookahead token is inherited
                                        term_errors // lookahead token is inherited
                                        Suc_TERM_OP . 

** In state 186, looking ahead at error, shifting is permitted
** because of the following sub-derivation:

syntax_toplevel file_toplevel 
DEFINITIONS COLON definitions 
                  HVAR COLON prop SEMICOLON definitions 
                             term Eq_OP term COLON complex_type 
                                        Suc_TERM_OP term 
                                                    term_errors 
                                                    . error 

** Conflict (reduce/reduce) in state 159.
** Token involved: CLOSE_PAREN
** This state is reached from file_toplevel after reading:

DEFINITIONS COLON HVAR COLON OPEN_PAREN error 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
DEFINITIONS COLON definitions 
                  HVAR COLON prop SEMICOLON definitions 
                             (?)

** In state 159, looking ahead at CLOSE_PAREN, reducing production
** prop_errors -> error 
** is permitted because of the following sub-derivation:

simple_prop 
OPEN_PAREN prop CLOSE_PAREN // lookahead token appears
           prop_errors // lookahead token is inherited
           error . 

** In state 159, looking ahead at CLOSE_PAREN, reducing production
** term_errors -> error 
** is permitted because of the following sub-derivation:

term Eq_OP term COLON complex_type 
simple_term 
OPEN_PAREN term CLOSE_PAREN // lookahead token appears
           term_errors // lookahead token is inherited
           error . 

** Conflict (shift/reduce) in state 122.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON OPEN_PAREN proof COMMA error 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    OPEN_PAREN proof COMMA proof CLOSE_PAREN 
                                                                           (?)

** In state 122, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

proof_errors 
error . Therefore_PROOF 

** In state 122, looking ahead at Therefore_PROOF, reducing production
** proof_errors -> error 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
proof_errors // lookahead token is inherited
error . 

** Conflict (shift/reduce) in state 92.
** Tokens involved: Therefore_PROOF Right_PROOF Left_PROOF
** The following explanations concentrate on token Therefore_PROOF.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON error 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                                    (?)

** In state 92, looking ahead at Therefore_PROOF, shifting is permitted
** because of the following sub-derivation:

proof_errors 
error . Therefore_PROOF 

** In state 92, looking ahead at Therefore_PROOF, reducing production
** proof_errors -> error 
** is permitted because of the following sub-derivation:

proof Therefore_PROOF prop // lookahead token appears
proof_errors // lookahead token is inherited
error . 

** Conflict (shift/reduce) in state 86.
** Tokens involved: Or_PROP_OP Implies_PROP_OP CLOSE_PAREN And_PROP_OP
** The following explanations concentrate on token Or_PROP_OP.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON OPEN_PAREN prop 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                   (?)

** In state 86, looking ahead at Or_PROP_OP, shifting is permitted
** because of the following sub-derivation:

simple_prop 
OPEN_PAREN prop CLOSE_PAREN 
           prop . Or_PROP_OP prop 

** In state 86, looking ahead at Or_PROP_OP, reducing production
** simple_prop -> OPEN_PAREN prop 
** is permitted because of the following sub-derivation:

prop Or_PROP_OP prop // lookahead token appears
simple_prop // lookahead token is inherited
OPEN_PAREN prop . 

** Conflict (shift/reduce) in state 85.
** Tokens involved: Zero_TERM VAR True_TERM OPEN_PAREN Nil_TERM False_TERM Eq_OP Cons_TERM_OP CLOSE_PAREN
** The following explanations concentrate on token Zero_TERM.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON OPEN_PAREN term 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                   (?)

** In state 85, looking ahead at Zero_TERM, shifting is permitted
** because of the following sub-derivation:

simple_prop 
OPEN_PAREN prop CLOSE_PAREN 
           term Eq_OP term COLON complex_type 
           term simple_term 
                . Zero_TERM 

** In state 85, looking ahead at Zero_TERM, reducing production
** term_errors -> OPEN_PAREN term 
** is permitted because of the following sub-derivation:

term Eq_OP term COLON complex_type 
term simple_term // lookahead token appears because simple_term can begin with Zero_TERM
term_errors // lookahead token is inherited
OPEN_PAREN term . 

** Conflict (shift/reduce) in state 83.
** Tokens involved: Or_PROP_OP Implies_PROP_OP And_PROP_OP
** The following explanations concentrate on token Or_PROP_OP.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON Forall_PROP VAR COLON complex_type DOT prop 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                   (?)

** In state 83, looking ahead at Or_PROP_OP, shifting is permitted
** because of the following sub-derivation:

Forall_PROP VAR COLON complex_type DOT prop 
                                       prop . Or_PROP_OP prop 

** In state 83, looking ahead at Or_PROP_OP, reducing production
** prop -> Forall_PROP VAR COLON complex_type DOT prop 
** is permitted because of the following sub-derivation:

prop Or_PROP_OP prop // lookahead token appears
Forall_PROP VAR COLON complex_type DOT prop . 

** Conflict (shift/reduce) in state 76.
** Tokens involved: Or_PROP_OP Implies_PROP_OP And_PROP_OP
** The following explanations concentrate on token Or_PROP_OP.
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON Exists_PROP VAR COLON complex_type DOT prop 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                   (?)

** In state 76, looking ahead at Or_PROP_OP, shifting is permitted
** because of the following sub-derivation:

Exists_PROP VAR COLON complex_type DOT prop 
                                       prop . Or_PROP_OP prop 

** In state 76, looking ahead at Or_PROP_OP, reducing production
** prop -> Exists_PROP VAR COLON complex_type DOT prop 
** is permitted because of the following sub-derivation:

prop Or_PROP_OP prop // lookahead token appears
Exists_PROP VAR COLON complex_type DOT prop . 

** Conflict (shift/reduce) in state 58.
** Tokens involved: List_TYPE_OP CLOSE_PAREN Arrow_TYPE_OP
** The following explanations concentrate on token List_TYPE_OP.
** This state is reached from file_toplevel after reading:

SIGNATURES COLON VAR COLON simple_type OPEN_PAREN OPEN_PAREN complex_type 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
SIGNATURES COLON signatures 
                 VAR COLON complex_type SEMICOLON signatures 
                           type_errors 
                           simple_type simple_type 
                                       OPEN_PAREN complex_type CLOSE_PAREN 
                                                  (?)

** In state 58, looking ahead at List_TYPE_OP, shifting is permitted
** because of the following sub-derivation:

simple_type 
OPEN_PAREN complex_type CLOSE_PAREN 
           complex_type . List_TYPE_OP 

** In state 58, looking ahead at List_TYPE_OP, reducing production
** type_errors -> OPEN_PAREN complex_type 
** is permitted because of the following sub-derivation:

complex_type List_TYPE_OP // lookahead token appears
type_errors // lookahead token is inherited
OPEN_PAREN complex_type . 

** Conflict (shift/reduce) in state 57.
** Token involved: List_TYPE_OP
** This state is reached from file_toplevel after reading:

SIGNATURES COLON VAR COLON simple_type OPEN_PAREN Arrow_TYPE_OP complex_type 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
SIGNATURES COLON signatures 
                 VAR COLON complex_type SEMICOLON signatures 
                           type_errors 
                           simple_type simple_type 
                                       OPEN_PAREN complex_type CLOSE_PAREN 
                                                  (?)

** In state 57, looking ahead at List_TYPE_OP, shifting is permitted
** because of the following sub-derivation:

type_errors 
Arrow_TYPE_OP complex_type 
              complex_type . List_TYPE_OP 

** In state 57, looking ahead at List_TYPE_OP, reducing production
** type_errors -> Arrow_TYPE_OP complex_type 
** is permitted because of the following sub-derivation:

complex_type List_TYPE_OP // lookahead token appears
type_errors // lookahead token is inherited
Arrow_TYPE_OP complex_type . 

** Conflict (shift/reduce) in state 55.
** Token involved: List_TYPE_OP
** This state is reached from file_toplevel after reading:

SIGNATURES COLON VAR COLON simple_type OPEN_PAREN complex_type Arrow_TYPE_OP complex_type 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
SIGNATURES COLON signatures 
                 VAR COLON complex_type SEMICOLON signatures 
                           type_errors 
                           simple_type simple_type 
                                       OPEN_PAREN complex_type CLOSE_PAREN 
                                                  (?)

** In state 55, looking ahead at List_TYPE_OP, reducing production
** complex_type -> complex_type Arrow_TYPE_OP complex_type 
** is permitted because of the following sub-derivation:

complex_type List_TYPE_OP // lookahead token appears
complex_type Arrow_TYPE_OP complex_type . 

** In state 55, looking ahead at List_TYPE_OP, shifting is permitted
** because of the following sub-derivation:

complex_type Arrow_TYPE_OP complex_type 
                           complex_type . List_TYPE_OP 

** Conflict (shift/reduce) in state 54.
** Token involved: List_TYPE_OP
** This state is reached from file_toplevel after reading:

SIGNATURES COLON VAR COLON simple_type OPEN_PAREN complex_type Arrow_TYPE_OP 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
SIGNATURES COLON signatures 
                 VAR COLON complex_type SEMICOLON signatures 
                           type_errors 
                           simple_type simple_type 
                                       OPEN_PAREN complex_type CLOSE_PAREN 
                                                  (?)

** In state 54, looking ahead at List_TYPE_OP, reducing production
** type_errors -> complex_type Arrow_TYPE_OP 
** is permitted because of the following sub-derivation:

complex_type List_TYPE_OP // lookahead token appears
type_errors // lookahead token is inherited
complex_type Arrow_TYPE_OP . 

** In state 54, looking ahead at List_TYPE_OP, shifting is permitted
** because of the following sub-derivation:

complex_type Arrow_TYPE_OP complex_type 
                           type_errors 
                           . List_TYPE_OP 

** Conflict (shift/reduce) in state 29.
** Tokens involved: Zero_TERM VAR True_TERM OPEN_PAREN Nil_TERM False_TERM Cons_TERM_OP
** The following explanations concentrate on token Zero_TERM.
** This state is reached from file_toplevel after reading:

DEFINITIONS COLON HVAR COLON Suc_TERM_OP term 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
DEFINITIONS COLON definitions 
                  HVAR COLON prop SEMICOLON definitions 
                             term Eq_OP term COLON complex_type 
                             (?)

** In state 29, looking ahead at Zero_TERM, shifting is permitted
** because of the following sub-derivation:

Suc_TERM_OP term 
            term simple_term 
                 . Zero_TERM 

** In state 29, looking ahead at Zero_TERM, reducing production
** term -> Suc_TERM_OP term 
** is permitted because of the following sub-derivation:

term simple_term // lookahead token appears because simple_term can begin with Zero_TERM
Suc_TERM_OP term . 

** Conflict (shift/reduce) in state 28.
** Tokens involved: Zero_TERM VAR True_TERM OPEN_PAREN Nil_TERM False_TERM Cons_TERM_OP CLOSE_PAREN
** The following explanations concentrate on token Zero_TERM.
** This state is reached from file_toplevel after reading:

DEFINITIONS COLON HVAR COLON Suc_TERM_OP OPEN_PAREN term 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
DEFINITIONS COLON definitions 
                  HVAR COLON prop SEMICOLON definitions 
                             term Eq_OP term COLON complex_type 
                             (?)

** In state 28, looking ahead at Zero_TERM, shifting is permitted
** because of the following sub-derivation:

Suc_TERM_OP term 
            simple_term 
            OPEN_PAREN term CLOSE_PAREN 
                       term simple_term 
                            . Zero_TERM 

** In state 28, looking ahead at Zero_TERM, reducing production
** term_errors -> OPEN_PAREN term 
** is permitted because of the following sub-derivation:

term simple_term // lookahead token appears because simple_term can begin with Zero_TERM
Suc_TERM_OP term // lookahead token is inherited
            term_errors // lookahead token is inherited
            OPEN_PAREN term . 

** Conflict (shift/reduce) in state 24.
** Tokens involved: Zero_TERM VAR True_TERM OPEN_PAREN Nil_TERM False_TERM
** The following explanations concentrate on token Zero_TERM.
** This state is reached from file_toplevel after reading:

DEFINITIONS COLON HVAR COLON term Cons_TERM_OP term 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
DEFINITIONS COLON definitions 
                  HVAR COLON prop SEMICOLON definitions 
                             term Eq_OP term COLON complex_type 
                             (?)

** In state 24, looking ahead at Zero_TERM, shifting is permitted
** because of the following sub-derivation:

term Cons_TERM_OP term 
                  term simple_term 
                       . Zero_TERM 

** In state 24, looking ahead at Zero_TERM, reducing production
** term -> term Cons_TERM_OP term 
** is permitted because of the following sub-derivation:

term simple_term // lookahead token appears because simple_term can begin with Zero_TERM
term Cons_TERM_OP term . 

** Conflict (shift/reduce) in state 23.
** Tokens involved: Zero_TERM VAR True_TERM OPEN_PAREN Nil_TERM False_TERM
** The following explanations concentrate on token Zero_TERM.
** This state is reached from file_toplevel after reading:

DEFINITIONS COLON HVAR COLON term Cons_TERM_OP 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
DEFINITIONS COLON definitions 
                  HVAR COLON prop SEMICOLON definitions 
                             term Eq_OP term COLON complex_type 
                             (?)

** In state 23, looking ahead at Zero_TERM, shifting is permitted
** because of the following sub-derivation:

term Cons_TERM_OP term 
                  simple_term 
                  . Zero_TERM 

** In state 23, looking ahead at Zero_TERM, reducing production
** term_errors -> term Cons_TERM_OP 
** is permitted because of the following sub-derivation:

term simple_term // lookahead token appears because simple_term can begin with Zero_TERM
term_errors // lookahead token is inherited
term Cons_TERM_OP . 

** Conflict (shift/reduce) in state 20.
** Tokens involved: Zero_TERM VAR True_TERM OPEN_PAREN Nil_TERM False_TERM
** The following explanations concentrate on token Zero_TERM.
** This state is reached from file_toplevel after reading:

DEFINITIONS COLON HVAR COLON Cons_TERM_OP term 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
DEFINITIONS COLON definitions 
                  HVAR COLON prop SEMICOLON definitions 
                             term Eq_OP term COLON complex_type 
                             (?)

** In state 20, looking ahead at Zero_TERM, shifting is permitted
** because of the following sub-derivation:

term_errors 
Cons_TERM_OP term 
             term simple_term 
                  . Zero_TERM 

** In state 20, looking ahead at Zero_TERM, reducing production
** term_errors -> Cons_TERM_OP term 
** is permitted because of the following sub-derivation:

term simple_term // lookahead token appears because simple_term can begin with Zero_TERM
term_errors // lookahead token is inherited
Cons_TERM_OP term . 

** Conflict (shift/reduce) in state 13.
** Tokens involved: Zero_TERM VAR True_TERM OPEN_PAREN Nil_TERM False_TERM Cons_TERM_OP
** The following explanations concentrate on token Zero_TERM.
** This state is reached from file_toplevel after reading:

DEFINITIONS COLON HVAR COLON Suc_TERM_OP 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
DEFINITIONS COLON definitions 
                  HVAR COLON prop SEMICOLON definitions 
                             term Eq_OP term COLON complex_type 
                             (?)

** In state 13, looking ahead at Zero_TERM, shifting is permitted
** because of the following sub-derivation:

Suc_TERM_OP term 
            simple_term 
            . Zero_TERM 

** In state 13, looking ahead at Zero_TERM, reducing production
** term_errors -> Suc_TERM_OP 
** is permitted because of the following sub-derivation:

term simple_term // lookahead token appears because simple_term can begin with Zero_TERM
term_errors // lookahead token is inherited
Suc_TERM_OP . 

** Conflict (reduce/reduce) in state 8.
** Token involved: CLOSE_PAREN
** This state is reached from file_toplevel after reading:

THEOREM HVAR COLON STATEMENT COLON OPEN_PAREN error 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file_toplevel 
syntax_toplevel file_toplevel 
THEOREM HVAR COLON STATEMENT COLON prop PROOF COLON proof QED DOT 
                                   (?)

** In state 8, looking ahead at CLOSE_PAREN, reducing production
** prop_errors -> error 
** is permitted because of the following sub-derivation:

simple_prop 
OPEN_PAREN prop CLOSE_PAREN // lookahead token appears
           prop_errors // lookahead token is inherited
           error . 

** In state 8, looking ahead at CLOSE_PAREN, reducing production
** term_errors -> error 
** is permitted because of the following sub-derivation:

term Eq_OP term COLON complex_type 
simple_term 
OPEN_PAREN term CLOSE_PAREN // lookahead token appears
           term_errors // lookahead token is inherited
           error . 
